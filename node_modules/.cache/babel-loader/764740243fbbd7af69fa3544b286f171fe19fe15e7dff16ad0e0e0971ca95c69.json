{"ast":null,"code":"var _jsxFileName = \"/home/vidhun/peacefulsleep/src/Pane.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SoundTile = ({\n  sound,\n  isActive,\n  onClick,\n  volume,\n  handleVolumeChange\n}) => {\n  const ringColor = isActive ? 'green' : 'transparent';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: onClick,\n    style: {\n      display: 'inline-block',\n      textAlign: 'center',\n      margin: '10px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      width: \"100px\",\n      height: \"100px\",\n      viewBox: \"0 0 100 100\",\n      children: /*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: \"50\",\n        cy: \"50\",\n        r: \"40\",\n        stroke: ringColor,\n        strokeWidth: \"8\",\n        fill: \"none\",\n        strokeLinecap: \"round\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: `/icons/${sound}.svg`,\n      alt: sound,\n      style: {\n        width: '60%',\n        height: '60%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        margin: '5px 0 0',\n        fontSize: '14px'\n      },\n      children: sound\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"range\",\n      min: \"0\",\n      max: \"1\",\n      step: \"0.1\",\n      value: volume || 0.5,\n      style: {\n        width: '70px',\n        marginTop: '5px'\n      },\n      onChange: event => handleVolumeChange(event, sound)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n_c = SoundTile;\nconst Pane = ({\n  title\n}) => {\n  _s();\n  const [activeSounds, setActiveSounds] = useState({});\n  const [volume, setVolume] = useState({});\n  const playSound = sound => {\n    // Logic for playing sound remains the same\n  };\n  const handleVolumeChange = (event, sound) => {\n    // Logic for handling volume change remains the same\n  };\n  const tiles = {\n    Forest: ['wind', 'crickets', 'river', 'frogs', 'rain'],\n    Beach: ['waves', 'seagulls', 'storm', 'boat', 'rain'],\n    Countryside: ['hens', 'stream', 'wind', 'rain', 'birds'],\n    Park: ['fountain', 'kids', 'birds', 'duck', 'dog'],\n    Urban: ['traffic', 'people', 'wind', 'rain', 'police']\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100vw',\n      height: '100vh',\n      backgroundImage: `url(/images/${title.toLowerCase()}.jpg)`,\n      backgroundSize: 'cover',\n      backgroundRepeat: 'no-repeat',\n      backgroundPosition: 'center',\n      color: 'white',\n      textAlign: 'center',\n      overflowY: 'scroll'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        fontSize: '24px',\n        fontWeight: 'bold',\n        margin: '0',\n        padding: '20px'\n      },\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        padding: '20px'\n      },\n      children: tiles[title].map((sound, index) => /*#__PURE__*/_jsxDEV(SoundTile, {\n        sound: sound,\n        isActive: !!activeSounds[sound],\n        onClick: () => playSound(sound),\n        volume: volume[sound],\n        handleVolumeChange: handleVolumeChange\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(Pane, \"1oXnDbOnM/e8uzZXvSRJJ6UFswY=\");\n_c2 = Pane;\nexport default Pane;\nvar _c, _c2;\n$RefreshReg$(_c, \"SoundTile\");\n$RefreshReg$(_c2, \"Pane\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SoundTile","sound","isActive","onClick","volume","handleVolumeChange","ringColor","style","display","textAlign","margin","children","width","height","viewBox","cx","cy","r","stroke","strokeWidth","fill","strokeLinecap","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","fontSize","type","min","max","step","value","marginTop","onChange","event","_c","Pane","title","_s","activeSounds","setActiveSounds","setVolume","playSound","tiles","Forest","Beach","Countryside","Park","Urban","backgroundImage","toLowerCase","backgroundSize","backgroundRepeat","backgroundPosition","color","overflowY","fontWeight","padding","flexDirection","alignItems","map","index","_c2","$RefreshReg$"],"sources":["/home/vidhun/peacefulsleep/src/Pane.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst SoundTile = ({ sound, isActive, onClick, volume, handleVolumeChange }) => {\n  const ringColor = isActive ? 'green' : 'transparent';\n\n  return (\n    <div\n      onClick={onClick}\n      style={{\n        display: 'inline-block',\n        textAlign: 'center',\n        margin: '10px',\n      }}\n    >\n      <svg width=\"100px\" height=\"100px\" viewBox=\"0 0 100 100\">\n        <circle\n          cx=\"50\"\n          cy=\"50\"\n          r=\"40\"\n          stroke={ringColor}\n          strokeWidth=\"8\"\n          fill=\"none\"\n          strokeLinecap=\"round\"\n        />\n      </svg>\n\n      <img\n        src={`/icons/${sound}.svg`}\n        alt={sound}\n        style={{\n          width: '60%',\n          height: '60%',\n        }}\n      />\n\n      <p style={{ margin: '5px 0 0', fontSize: '14px' }}>{sound}</p>\n\n      <input\n        type=\"range\"\n        min=\"0\"\n        max=\"1\"\n        step=\"0.1\"\n        value={volume || 0.5}\n        style={{ width: '70px', marginTop: '5px' }}\n        onChange={(event) => handleVolumeChange(event, sound)}\n      />\n    </div>\n  );\n};\n\nconst Pane = ({ title }) => {\n  const [activeSounds, setActiveSounds] = useState({});\n  const [volume, setVolume] = useState({});\n\n  const playSound = (sound) => {\n    // Logic for playing sound remains the same\n  };\n\n  const handleVolumeChange = (event, sound) => {\n    // Logic for handling volume change remains the same\n  };\n\n  const tiles = {\n    Forest: ['wind', 'crickets', 'river', 'frogs', 'rain'],\n    Beach: ['waves', 'seagulls', 'storm', 'boat', 'rain'],\n    Countryside: ['hens', 'stream', 'wind', 'rain', 'birds'],\n    Park: ['fountain', 'kids', 'birds', 'duck', 'dog'],\n    Urban: ['traffic', 'people', 'wind', 'rain', 'police'],\n  };\n\n  return (\n    <div\n      style={{\n        width: '100vw',\n        height: '100vh',\n        backgroundImage: `url(/images/${title.toLowerCase()}.jpg)`,\n        backgroundSize: 'cover',\n        backgroundRepeat: 'no-repeat',\n        backgroundPosition: 'center',\n        color: 'white',\n        textAlign: 'center',\n        overflowY: 'scroll',\n      }}\n    >\n      <h2 style={{ fontSize: '24px', fontWeight: 'bold', margin: '0', padding: '20px' }}>{title}</h2>\n      <div\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          padding: '20px',\n        }}\n      >\n        {tiles[title].map((sound, index) => (\n          <SoundTile\n            key={index}\n            sound={sound}\n            isActive={!!activeSounds[sound]}\n            onClick={() => playSound(sound)}\n            volume={volume[sound]}\n            handleVolumeChange={handleVolumeChange}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Pane;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}